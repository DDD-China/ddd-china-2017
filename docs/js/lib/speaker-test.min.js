eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('1I f=[{\'5-l\':\'../m/f/1r-1g.w\',\'5-k\':\'P I\',\'5-j\':\'全球软件巨匠\',\'5-i\':\'\'+\'<8 b="a-c">P I</8><9>\'+\'<p>全球软件巨匠，11 1e 之父</p>\',\'5-h\':\'<8 b="a-c">「1q 1W 1X 1Y」</8><9>\',\'5-g\':\'\'},{\'5-l\':\'../m/f/24.w\',\'5-k\':\'肖然\',\'5-j\':\'精益方法布道师\',\'5-i\':`<8 b="a-c">肖然</8><9>q咨询和设计总监，精益方法布道师<9>国内最早的敏捷精益方法实践者，适应性领导力及领域驱动架构方法首席讲师及教练。作为咨询顾问长期辅导国内外知名企业进行精益企业的建设，近期在多个大型开发团队推广领域驱动设计方法及微服务架构。`,\'5-h\':`<8 b="a-c">「为不确定性架构」</8><9>第四次工业革命引爆了一个科技驱动的新时代，软件成为了这个时代的核心竞争力。然而在行业光环下的软件工程人员们日子并不好过，高速乃至颠覆性的发展给我们制造了大量的不确定性，迫使我们去思考新的技术架构方式来适应这个时代。正是在这样的背景下，领域驱动设计的方式再次进入了我们的视野，成为了我们响应不确定性的重要方法。`,\'5-g\':`<d><0>不确定性的悖论</0><0>架构设计的达摩克利斯之剑</0><0>面向不确定性演进</0><0>微服务架构红眼病</0></d>`,},{\'5-l\':\'../m/f/2a.t\',\'5-k\':\'张逸\',\'5-j\':\'编码实践、加固设计、领域驱动实践领先者\',\'5-i\':`<8 b="a-c">张逸</8><9>编码实践、加固设计、领域驱动实践领先者<9>致力于编码实践、架构设计、领域驱动、大数据分析，并在金融、制造业、医疗、通信、企业架构、互联网诸多行业有丰富的开发与设计经验。`,\'5-h\':`<8 b="a-c">「n e的实践意义」</8><9>n e作为7战略设计的重要入口与概念，可以与微服务设计有机地结合起来。<9>本演讲会深入剖析n e的本质原理，提供切实可行的方法帮助团队成员发现n e，探讨n e的边界，并结合11 2h、微服务架构、六边形架构模式、用户故事地图，总结出从架构到编码实现的实践意义。`,\'5-g\':`<d><0>n e的本质意义</0><0>如何发现合理的n e n e的边界</0><0>n e之间的通信</0><0>从战略架构到战术实现</0></d>`,},{\'5-l\':\'../m/f/2f.t\',\'5-k\':\'李新\',\'5-j\':\'骨灰级程序员\',\'5-i\':`<8 b="a-c">李新</8><9>代码20+年，精通从C++到r，用z实现过互联网大型分布式系统，用2d设计过现代通信网络。像计算机一样思考，追求代码架构设计的大道至简。`,\'5-h\':`<8 b="a-c">「你的领域架构落地了吗？」</8><9>领域驱动的架构设计要求从业务分析到代码实现都采用统一语言，即最后的实现代码是完整表达出了我们的领域建模的。然而我们发现很多团队在采用7的时候并没有能够做到这一点，让领域模型流于了形式，没有发挥统一语言的核心作用。本次演讲中将为大家介绍一些工具通过可视化的方式来帮助团队甄别领域模型的代码落地，促进领域模型的维护成为团队每个人的责任。`,\'5-g\':`<d><0>领域模型从产生到落地</0><0>经典的模型实现模式</0><0>可视化你的领域模型</0><0>2c：模型守护！</0></d>`,},{\'5-l\':\'../m/f/2b.t\',\'5-k\':\'滕云\',\'5-j\':\'实现领域驱动设计译者\',\'5-i\':`<8 b="a-c">腾云</8><9>《实现领域驱动设计》译者<9>q咨询师，6年+一线编码经验，3年+领域驱动设计实践经验，技术专研领域包括7、V生态圈、x、29以及软件匠艺；译有《实现领域驱动设计》和《人件》等书。`,\'5-h\':`<8 b="a-c">「7——没那么难」</8><9>7社区一直不乏思想领袖，但是要将7落地确是另一回事情。本次演讲主要面向希望在项目上实际实施7的听众，包含7中的战略设计和战术设计，也包含7与微服务的关系分析。`,\'5-g\':`<d><0>7限界上下文划分</0><0>7与微服务</0><0>聚合根识别</0><0>实体和值对象</0><0>领域服务</0><0>六边形架构</0></d>`,},{\'5-l\':\'../m/f/28.t\',\'5-k\':\'寇宇\',\'5-j\':\'微服务架构、系统监控、企业架构规划专家\',\'5-i\':`<8 b="a-c">寇宇</8><9>融数数据研发总监，微服务架构、系统监控、企业架构规划专家<9>融数数据研发总监，专注于微服务架构、系统监控、企业架构规划等领域。曾就职与27、苏宁易购、神州数码等企业。`,\'5-h\':`<8 b="a-c">「微服务治理及监控」</8><9>微服务架构理念，如何利用领域驱动设计对传统单体架构或者26架构的系统进行微服务架构改造，进而构建微服务架构体系；介绍微服务治理方案和微服务架构下的系统监控方法。`,\'5-g\':`<d><0>微服务架构及其特点</0><0>微服务划定和抽象</0><0>微服务架构选型</0><0>微服务治理与监控</0></d>`,},{\'5-l\':\'../m/f/25.t\',\'5-k\':\'张群辉\',\'5-j\':\'阿里盒马架构总监<9>领域驱动设计国内最早的一批实践者\',\'5-i\':\'<8 b="a-c">张群辉</8><9>\'+\'阿里盒马架构总监，领域驱动设计国内最早的一批实践者<9>\'+\'15 + 年技术及管理实战经验，前阿里基础机构事业部工程效率总监，\'+\'长期一线指导大型复杂系统的架构设计，x、微服务架构及领域驱动\'+\'设计国内最早的一批实践者。崇尚实践出真知，一直奋斗在技术一线。\',\'5-h\':\'<8 b="a-c">「7@盒马」</8><9>\'+\'盒马作为阿里巴巴新零售的排头兵，第一次真正意义上涉入零售行业，\'+\'创建中国新零售模式下的供应链体系，颠覆传统23是盒马技术最近几年不停探索的重点。\'+\'互联网 + 传统零售业务复杂，领域模型在这个复杂的体系里变得尤为重要，\'+\'有别于传统互联网电商架构，本演讲将会深入浅出阐述领域驱动开发在盒马模式下如何演化，\'+\'落地，如何在互联网架构下完整实施具有阿里特点的领域驱动设计模式\',\'5-g\':\'<d>\'+\'<0>领域模型：基于对象 22 基于数据库</0>\'+\'<0>领域模型下的依赖注入</0>\'+\'<0>21的实现方式</0>\'+\'<0>领域模型下的部署架构</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1Z.t\',\'5-k\':\'王博\',\'5-j\':\'资深7实践者\',\'5-i\':\'<8 b="a-c">王博</8><9>\'+\'资深程序员、软件工匠<9>\'+\'独立咨询顾问，专注于大型系统软件的领域建模设计、重构及服务化架构设计等领域。\'+\'曾先后在电信、云服务、自动驾驶等领域帮助客户进行微服务架构和领域驱动设计等工作，\'+\'参与并指导过大规模的代码重构和架构落地等工作。\',\'5-h\':\'<8 b = "a-c">「7常见困难及解决之道」</8><9>\'+\'做好领域驱动设计是有门槛的。作为一名软件技术咨询师，曾在不同行业、\'+\'不同技术领域进行软件设计和开发工作，遇见过各种7在实施中的问题和困难。\'+\'本议题将这些常见问题与困难进行整理，结合案例给出解决建议，帮助大家更好的\'+\'使用7解决复杂问题。\',\'5-g\':\'7技术发展简介<9>支撑7的软件开发方法和技能<9>复杂软件开发中使用7常见的问题与困难<9>\'+\'<d>\'+\'<0>案例1：缺乏演进式设计能力的领域驱动设计</0>\'+\'<0>案例2：贫血的领域驱动设计</0>\'+\'<0>案例3：抽象不足的领域模型</0>\'+\'<0>案例4：面向底层的、高性能软件的领域建模</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1V.w\',\'5-k\':\'黄晓辉\',\'5-j\':\'点融网站业务系统设计及开发负责人\',\'5-i\':\'<8 b="a-c">黄晓辉</8><9>\'+\'现就职于点融，一家上海的互联网金融公司，曾就职于摩根士丹利、微软等公司。目前\'+\'主要负责点融网站业务系统的设计和开发。专注于互联网金融业务架构设计、微服务实践\'+\'、1U规范和技术团队建设。\',\'5-h\':\'<8 b = "a-c">「团队技术进阶之路 - 以7为切入点」</8><9>\'+\'问题背景：团队在技术上成长缓慢，需要更快更好的完成各项业务需求；\'+\' 解决方案：以7为理论和实践框架，发挥“鲶鱼效应”，促进团队学习，\'+\'并最终在新的层次上提供综合技术能力； 方案介绍：经历了 引入 - 讨论 \'+\'- 概念验证 - 小范围实践 - 全面推进 - 反思 - 重新设计 等多个阶段，\'+\'在各个阶段让团队自己去发现并总结经验教训，从而在实践中得到成长； \'+\'实施后的效果：团队在编码规范，代码架构，业务建模等方面形成了一套统\'+\'一的方法论，并且进一步引入了1T的实践，在开发质量和效率上都得到了提供。\',\'5-g\':\'<d>\'+\'<0>实施7前所在团队遇到的问题&背景</0>\'+\'<0>具体的实施步骤</0>\'+\'<0>从领域模型的讨论开始</0>\'+\'<0>1S & 遇到的问题</0>\'+\'<0>在团队中扩大实践范围 & 遇到的问题</0>\'+\'<0>反思</0>\'+\'<0>重新设计</0>\'+\'<0>总结</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1R.w\',\'5-k\':\'周雪峰\',\'5-j\':\'衡睿教育Z，微软最有价值专家（Y）\',\'5-i\':\'<8 b="a-c">周雪峰</8><9>\'+\'衡睿教育Z，微软最有价值专家（Y）<9>\'+\'瑞通（北京）高级技术培训中心高级讲师，微软最有影响力开发者，微软1O 1N，\'+\'具有多年基于.1M平台的互联网项目的架构经验及团队管理经验,十多年来一直从事\'+\'X企业的管理，咨询和培训工作；具有丰富的X企业管理经验，咨询和教学经验。\',\'5-h\':\'<8 b = "a-c">「领域驱动设计与o项目管理」</8><9>\'+\'问题背景：领域驱动设计架构和o敏捷项目管理方法论相结合，改进组织治理。\'+\' 解决方案选型：三个医疗行业项目（江西省医院信息化管理系统，江西省新农合信\'+\'息管理系统，江西省临床试验信息管理系统），技术架构为微软的7框架（1K\'+\'1J），项目管理方法论为：o 方案介绍：使用o敏捷项目管理方法论，\'+\'管理基于7的项目，结合o的7框架各自的优势，提升开发效率，实现软件工\'+\'厂化的组织改进。 实施后效果：提高开发效率，改进软件开发流程与绩效考核，实\'+\'现了组织的技术资产原始积累，与组件化开发。\',\'5-g\':\'<d>\'+\'<0>o和7的完美结合</0>\'+\'<0>三方（产品经理，项目经理和程序员）领域模型设计会</0>\'+\'<0>启动o流程（计划会议，进行o，演示）</0>\'+\'<0>用7实现的软件工厂</0>\'+\'<0>7案例分享：江西省新农合信息管理系统</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1H.w\',\'5-k\':\'张建锋\',\'5-j\':\'资深7实践者\',\'5-i\':\'<8 b="a-c">张建锋</8><9>\'+\'千岛源/共同创始人<9>\'+\'原红帽公司 1G 应用服务器核心开发组成员。毕业于北京邮电大学和\'+\'清华大学，曾供职于金山软件，1F 科技公司和红帽软件。 对于 A \'+\'的各项规范比较熟悉；开源技术爱好者，喜欢接触各类开源项目，学习优秀\'+\'之处并加以借鉴，认为阅读好的源码就和阅读一本好书一样让人感到愉悦；\'+\'在分布式计算，企业应用设计，移动行业应用，1E 等技术领域有丰富的\'+\'实战经验和自己的见解；愿意思考软件背后蕴涵的管理思想，认为软件技术\'+\'是一种高效管理的实现方式，有志于将管理学和软件开发进行结合。\',\'5-h\':\'<8 b = "a-c">「微服务架构下v在领域驱动设计中的精妙应用」</8><9>\'+\'v规范是A中揭示软件对象设计的部分，最早来源于B的O框架。在7设计中，\'+\'可以运用大量的v规范定义技术来灵活的对应用软件设计构造。和V框架相比，v可塑造\'+\'性更强，企业可以自行开发定义出一套符合自身业务特点的业务框架，做到软件复用和易维护。\'+\'通过配合使用1C，消息，1B，流式数据，事务处理等技术，v可以实现一套高效稳定的7 \'+\'z开发框架。更重要的是，它是可扩展可伸缩的，既能部署成经典的1A包应用；又可以结合\'+\'1z，开发微服务体系的应用。\',\'5-g\':\'\'+\'<d>\'+\'<0>7用z语言的实现设计思路</0>\'+\'<0>应用v规范定义对象 </0>\'+\'<0>7开发框架的实现介绍</0>\'+\'<0>如何实现灵活部署</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1y.U\',\'5-k\':\'亢江妹\',\'5-j\':\'q首席业务分析师，中国区业务分析实践负责人\',\'5-i\':\'<8 b="a-c">亢江妹</8><9>\'+\'q首席业务分析师，中国区业务分析实践负责人<9>\'+\'在敏捷/精益产品需求分析、大企业需求管理、行业研究等方面，有丰富的实战和教练经验；\'+\'她也是业务分析师(1x)、产品经理的活跃参与者，是1w(1v E 1u)社区、\'+\'q中国行业研究社区的发起人，也是q商业洞见的主编。\',\'5-h\':\'<8 b = "a-c">「7落地：s和架构师的完美结对」</8><9>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让7的真正价值落地，即如何\'+\'“让业务领域驱动架构设计”。本话题中，将结合项目实例与你分享s和架构师如何完美结对，\'+\'来梳理业务需求、进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型\'+\'，梳理和定义业务服务需求，在“业务侧”和“技术侧”建立统一共同的语言，真正让7落地，\'+\'并提供s和架构师结对实践的实用技巧。\',\'5-g\':\'<d>\'+\'<0>4种常用的业务梳理模式，快速建立业务背景上下文</0>\'+\'<0>业务领域、划分子领域的划分模式及案例 </0>\'+\'<0>如何建立业务概念关系模型</0>\'+\'<0>梳理定义服务需求</0>\'+\'<0>业务概念模型与信息架构、技术架构如何相互映射？</0>\'+\'<0>s和架构师完美结对的M</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1t.U\',\'5-k\':\'周宇刚\',\'5-j\':\'q高级咨询师，7实践家\',\'5-i\':\'<8 b="a-c">周宇刚</8><9>\'+\'q高级咨询师，7实践家<9>\'+\'10年企业级应用开发经验，主要负责软件交付和持续交付咨询。从1p年开始关注领域驱动设计，\'+\'是1o 1n 7标签 1m 1l 2i 1j 之一，曾在多个行业领域中实战过7。\',\'5-h\':\'<8 b = "a-c">「7落地：s和架构师的完美结对」</8><9>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让7的真正价值落地，即如何“让业务\'+\'领域驱动架构设计”。本话题中，将结合项目实例与你分享s和架构师如何完美结对，来梳理业务需求、\'+\'进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型，梳理和定义业务服务需求，\'+\'在“业务侧”和“技术侧”建立统一共同的语言，真正让7落地，并提供s和架构师结对实践的实用技巧。\'+\'v规范是A中揭示软件对象设计的部分，最早来源于B的O框架。在7设计中，\',\'5-g\':\'<d>\'+\'<0>4种常用的业务梳理模式，快速建立业务背景上下文</0>\'+\'<0>业务领域、划分子领域的划分模式及案例 </0>\'+\'<0>如何建立业务概念关系模型</0>\'+\'<0>梳理定义服务需求</0>\'+\'<0>业务概念模型与信息架构、技术架构如何相互映射？</0>\'+\'<0>s和架构师完美结对的M</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1b.w\',\'5-k\':\'张晓龙\',\'5-j\':\'中兴通讯虚拟化架构师\',\'5-i\':\'<8 b="a-c">张晓龙</8><9>\'+\'中兴通讯虚拟化架构师<9>\'+\'12年毕业于哈尔滨工程大学计算机应用专业，爱好编程，业余时间喜欢写一些技术类文章。\'+\'12年就职于18，参与过大型通信软件的开发，擅长17和重构等16实践。近年来参与虚拟化\'+\'产品的研发，同时负责提升全员的7能力，从7导入到7训练营，不断的给学员传递7的\'+\'思想和实践技能，目前7已在多个团队有效落地，并得到大家的一致认可。除过程序员，个人\'+\'在组织中还有一些其它标签，比如架构师、咨询师和技术教练等。个人的简书地址：\'+\'R://S.T.W/u/13。熟练掌握C++/r/F/z等编程语言，\'+\'这一年主要使用的编程语言是r，同时r也成了7落地的主要语言。这一年在简书上也写\'+\'了多篇与7相关的技术文章，比如《软件设计的演变过程》，《r事务模型》，\'+\'《7分层架构的三种模式》，《2e 1Q Q G r》，\'+\'《1P G F 1D 1s E 1k》。\',\'5-h\':\'<8 b = "a-c">「7分层架构的三种模式」</8><9>\'+\'问题背景：在这个快速应对需求变化的时代，代码容易被实现成意大利面条式，同时重复代码多，又好像有一些不同，\'+\'很多程序员都掉进了这个让人痛苦不堪的焦油坑，无法自拔。软件设计就是在长期以来让软件容易应对变化，\'+\'提高可修改性和可维护性，从而降低软件开发成本。方案介绍：通过分层设计，分离关注点，凸显领域模型，\'+\'降低层与层之间的依赖，同时有利于各层逻辑的复用或替换。《领域驱动设计－软件核心复杂性应对之道》这本书中，\'+\'提出了传统的四层架构，层与层之间遵循松散分层架构，即上层可以调用任意下层。我们在实践中，\'+\'将基础设施层分为横向的和纵向的，横向的D提供给领域层调用，纵向的D提供给应用层和用户界面层调用，\'+\'其中领域层、应用层和用户界面层遵循严格分层架构，即上层仅能调用相邻的下层，这就是“L”型分层架构。\'+\'将J应用在分层架构中，将出现五层架构模式，相对于传统的四层架构模式，基础设施层、应用层和用户界面层保持不变，\'+\'将领域层分离成新领域层（Q/1f）和环境层（e）。在一些复杂的领域，一次事务涉及很多次消息的交互，\'+\'这时e层就非常复杂，很有必要把e层分离成新e层（y和H）和事务层\'+\'（1d 1c)。新e层基本单位是一次同步消息或异步消息的交互（记作y），\'+\'新e层的H是y或一组紧密相关的y（记作14）是否执行的开关，\'+\'而事务层可以看做是大e层。在实践中，我们抽取出r事务模型，基本版参见简书的文章《r事务模型》，\'+\'地址R://S.T.W/p/1a，一直在演进，目前已被多个团队使用。\'+\'7六层架构模式可以看做是7五层架构模式在特定领域的一种变体。通过依赖导致原则，改善分层架构，即六边形架构。\'+\'六边形架构在产品级有一些应用，比如平台聚合内部的各种能力，对外统一提供为19接口。\'+\'六边形架构也可以用于不同层组件的协作开发，即在明确组件功能后就可以专注开发，待到联调阶段，\'+\'该组件的多个用户分别通过端口适配器方式再与该组件进行集成。实施后效果说明：事务层代码和流程图一一对应，\'+\'领域层代码通过小类大对象设计，代码层次清晰，有效的控制了软件的实现复杂度，并且得到了团队所有成员的普遍认可。\',\'5-g\':\'<d>\'+\'<0>7回顾</0>\'+\'<0>分层架构简介 </0>\'+\'<0>传统的四层架构模式</0>\'+\'<0>引入J后的五层架构模式，特定领域的六层架构模式</0>\'+\'<0>六边形架构</0>\'+\'<0>收益</0>\'+\'</d>\'},{\'5-l\':\'../m/f/1i.t\',\'5-k\':\'张晔\',\'5-j\':\'中兴通讯公司级研发教练，架构技术狂热爱好者。\',\'5-i\':\'<8 b="a-c">张晔</8><9>\'+\'中兴通讯公司级研发教练，架构技术狂热爱好者。<9>\'+\'擅长C++，N，K等编程语言，具备丰富的领域建模、代码质量提升、自动化测试、x等实战经验。\'+\'对深圳软件技术社区发展推广亦有贡献，组织多次社区活动（1h、2g、编码道场等）。目前对形式化方法1L+\'+\'和微服务架构具有浓厚兴趣。<9>\'+\'工作之余喜欢读书、音乐、羽毛球、旅游以及研究新事物。\',\'5-h\':\'<8 b = "a-c">「7在测试体系建设的实践演进」</8><9>\'+\'本次演讲将全方位介绍7方法在中兴通讯测试体系设计和落地过程中所启到的关键性作用。\'+\'内容既涵盖从传统自动化测试到基于领域驱动测试的思想转变，也包含随着7实践的不断深入对自动化测试框架逐步演进，\'+\'再到运用7战略设计对云测试平台的微服务划分。不但包含7战略设计，也包括7的战术设计；不但包含7在单体架\'+\'构的应用，还包括7在微服务架构的应用；不但包含7在测试执行框架的实践，还包括7在云测试平台的实践；不但包\'+\'含7的N语言的实现，还包括K语言的实现。<9>\'+\'整个测试体系目前在中兴通讯x中发挥着重要作用，本次演讲还会对测试体系建设的不同阶段所面临的不同问题和相\'+\'应解决方案进行描述，相信能满足不同类型的听众。\',\'5-g\':\'\'+\'<d>\'+\'<0>中兴通讯x实践简介</0>\'+\'<0>传统的自动化测试介绍</0>\'+\'<0>基于领域驱动的自动化测试</0>\'+\'<0>基于云的测试平台建设</0>\'+\'<0>7实践心得总结</0>\'+\'</d>\'}]',62,143,'li|||||speaker||DDD|span|br|bold|class|text|ul|Context|speakers|outline|topic|information|introduction|name|img|resource|Bounded|Scrum||ThoughtWorks|Golang|BA|png||CDI|jpg|DevOps|Action|Java|JavaEE|GavinKing||API|and|Python|in|Specification|Brandolini|DCI|golang||Tips|python|Seam|Alberto|Object|http|www|jianshu|jpeg|Spring|com|IT|MVP|CEO||Event|2008|1381dc29fed9|Procedure||XP|TDD|ZTE|Restful|b7e874f6d3e8|zhangxiaolong|DSL|Transaction|Storming|Role|brandolini|APAC|zhangye|Answerer|FP|Time|All|Overflow|Stack|09|why|alberto|OO|zhouyugang|Analysis|Design|DnA|IIBA|kangjiangmei|kubernetes|war|JPA|Rest|from|Devops|IONA|JBoss|zhangjianfeng|var|ayered|AutoNL|TLA|NET|Idol|CPE|FizzBuzzWhizz|Domain|zhouxuefeng|POC|BDD|REST|huangxiaohui|ddd|matters|today|wangbo||repository|vs|ERP|xiaoran|zhangqunhui|SOA|IBM|kouyu|Linux|zhangyi|tengyun|tequila|Scala|Implement|lixin|GDCR|Sourcing|Top'.split('|'),0,{}))
