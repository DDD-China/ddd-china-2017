eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3r h=[{\'7-n\':\'../m/h/1I-1J.r\',\'7-o\':\'1h 19\',\'7-j\':\'全球软件巨匠\',\'7-l\':\'\'+\'<9 e="d-c">1h 19</9><b>\'+\'<p>全球软件巨匠，W 1S 之父</p>\',\'7-k\':\'<9 e="d-c">「1W 22 24 2e」</9><b>\',\'7-i\':\'\'},{\'7-n\':\'../m/h/2o.r\',\'7-o\':\'肖然\',\'7-j\':\'精益方法布道师\',\'7-l\':`<9 e="d-c">肖然</9><b>s咨询和设计总监，精益方法布道师<b>国内最早的敏捷精益方法实践者，适应性领导力及领域驱动架构方法首席讲师及教练。作为咨询顾问长期辅导国内外知名企业进行精益企业的建设，近期在多个大型开发团队推广领域驱动设计方法及微服务架构。`,\'7-k\':`<9 e="d-c">「为不确定性架构」</9><b>第四次工业革命引爆了一个科技驱动的新时代，软件成为了这个时代的核心竞争力。然而在行业光环下的软件工程人员们日子并不好过，高速乃至颠覆性的发展给我们制造了大量的不确定性，迫使我们去思考新的技术架构方式来适应这个时代。正是在这样的背景下，领域驱动设计的方式再次进入了我们的视野，成为了我们响应不确定性的重要方法。`,\'7-i\':`<f><1>不确定性的悖论</1><1>架构设计的达摩克利斯之剑</1><1>面向不确定性演进</1><1>微服务架构红眼病</1></f>`,},{\'7-n\':\'../m/h/2u.A\',\'7-o\':\'张逸\',\'7-j\':\'编码实践、加固设计、领域驱动实践领先者\',\'7-l\':`<9 e="d-c">张逸</9><b>编码实践、加固设计、领域驱动实践领先者<b>致力于编码实践、架构设计、领域驱动、大数据分析，并在金融、制造业、医疗、通信、企业架构、互联网诸多行业有丰富的开发与设计经验。`,\'7-k\':`<9 e="d-c">「t q的实践意义」</9><b>t q作为a战略设计的重要入口与概念，可以与微服务设计有机地结合起来。<b>本演讲会深入剖析t q的本质原理，提供切实可行的方法帮助团队成员发现t q，探讨t q的边界，并结合W 3d、微服务架构、六边形架构模式、用户故事地图，总结出从架构到编码实现的实践意义。`,\'7-i\':`<f><1>t q的本质意义</1><1>如何发现合理的t q t q的边界</1><1>t q之间的通信</1><1>从战略架构到战术实现</1></f>`,},{\'7-n\':\'../m/h/3k.A\',\'7-o\':\'潘加宇\',\'7-j\':\'O 首席专家<b>O 创始人\',\'7-l\':\'<9 e="d-c">潘加宇</9><b>O创始人，潜心研究需求和设计技能。\'+\'3q年开始对外提供P需求和设计的技术指导和训练服务。到现在为止，已经上门为超过3p家的组\'+\'织提供服务，覆盖了国内各个领域的领袖企业，包括通信、企业管理、电子商务、房地产、网络游戏、\'+\'地理信息、物流、数码设备、医疗设备、工业控制.....等领域。\',\'7-k\':\'<9 e = "d-c">「复杂领域模型的建模」</9><b>\'+\'一个反映领域内涵的领域模型是领域驱动设计成功的根本。目前许多有关领域驱动设计的探讨集中于如何实现领域驱动设计，\'+\'所举例子的领域模型中涉及到的类的数量很少，导致有的开发人员虽然掌握了实现领域驱动设计的一些技能，却在面对量多\'+\'而且复杂的领域概念和逻辑时，不知道如何下手来建立恰当的领域模型。本演讲介绍领域建模的一些关键要点，有助于改善这一现象。\',\'7-i\':\'<f>\'+\'<1>建模要素讲解</1>\'+\'<1>一个领域建模过程的案例展示</1>\'+\'</f>\'},{\'7-n\':\'../m/h/3o.A\',\'7-o\':\'李新\',\'7-j\':\'骨灰级程序员\',\'7-l\':`<9 e="d-c">李新</9><b>代码20+年，精通从C++到z，用I实现过互联网大型分布式系统，用3n设计过现代通信网络。像计算机一样思考，追求代码架构设计的大道至简。`,\'7-k\':`<9 e="d-c">「你的领域架构落地了吗？」</9><b>领域驱动的架构设计要求从业务分析到代码实现都采用统一语言，即最后的实现代码是完整表达出了我们的领域建模的。然而我们发现很多团队在采用a的时候并没有能够做到这一点，让领域模型流于了形式，没有发挥统一语言的核心作用。本次演讲中将为大家介绍一些工具通过可视化的方式来帮助团队甄别领域模型的代码落地，促进领域模型的维护成为团队每个人的责任。`,\'7-i\':`<f><1>领域模型从产生到落地</1><1>经典的模型实现模式</1><1>可视化你的领域模型</1><1>3m：模型守护！</1></f>`,},{\'7-n\':\'../m/h/3l.A\',\'7-o\':\'滕云\',\'7-j\':\'实现领域驱动设计译者\',\'7-l\':`<9 e="d-c">腾云</9><b>《实现领域驱动设计》译者<b>s咨询师，6年+一线编码经验，3年+领域驱动设计实践经验，技术专研领域包括a、F生态圈、w、3i以及软件匠艺；译有《实现领域驱动设计》和《人件》等书。`,\'7-k\':`<9 e="d-c">「a——没那么难」</9><b>a社区一直不乏思想领袖，但是要将a落地确是另一回事情。本次演讲主要面向希望在项目上实际实施a的听众，包含a中的战略设计和战术设计，也包含a与微服务的关系分析。`,\'7-i\':`<f><1>a限界上下文划分</1><1>a与微服务</1><1>聚合根识别</1><1>实体和值对象</1><1>领域服务</1><1>六边形架构</1></f>`,},{\'7-n\':\'../m/h/3h.A\',\'7-o\':\'寇宇\',\'7-j\':\'微服务架构、系统监控、企业架构规划专家\',\'7-l\':`<9 e="d-c">寇宇</9><b>融数数据研发总监，微服务架构、系统监控、企业架构规划专家<b>融数数据研发总监，专注于微服务架构、系统监控、企业架构规划等领域。曾就职与3g、苏宁易购、神州数码等企业。`,\'7-k\':`<9 e="d-c">「微服务治理及监控」</9><b>微服务架构理念，如何利用领域驱动设计对传统单体架构或者3f架构的系统进行微服务架构改造，进而构建微服务架构体系；介绍微服务治理方案和微服务架构下的系统监控方法。`,\'7-i\':`<f><1>微服务架构及其特点</1><1>微服务划定和抽象</1><1>微服务架构选型</1><1>微服务治理与监控</1></f>`,},{\'7-n\':\'../m/h/3e.A\',\'7-o\':\'张群辉\',\'7-j\':\'阿里盒马架构总监<b>领域驱动设计国内最早的一批实践者\',\'7-l\':\'<9 e="d-c">张群辉</9><b>\'+\'阿里盒马架构总监，领域驱动设计国内最早的一批实践者<b>\'+\'15 + 年技术及管理实战经验，前阿里基础机构事业部工程效率总监，\'+\'长期一线指导大型复杂系统的架构设计，w、微服务架构及领域驱动\'+\'设计国内最早的一批实践者。崇尚实践出真知，一直奋斗在技术一线。\',\'7-k\':\'<9 e="d-c">「a@盒马」</9><b>\'+\'盒马作为阿里巴巴新零售的排头兵，第一次真正意义上涉入零售行业，\'+\'创建中国新零售模式下的供应链体系，颠覆传统3c是盒马技术最近几年不停探索的重点。\'+\'互联网 + 传统零售业务复杂，领域模型在这个复杂的体系里变得尤为重要，\'+\'有别于传统互联网电商架构，本演讲将会深入浅出阐述领域驱动开发在盒马模式下如何演化，\'+\'落地，如何在互联网架构下完整实施具有阿里特点的领域驱动设计模式\',\'7-i\':\'<f>\'+\'<1>领域模型：基于对象 3b 基于数据库</1>\'+\'<1>领域模型下的依赖注入</1>\'+\'<1>3a的实现方式</1>\'+\'<1>领域模型下的部署架构</1>\'+\'</f>\'},{\'7-n\':\'../m/h/39.r\',\'7-o\':\'黄晓辉\',\'7-j\':\'点融网站业务系统设计及开发负责人\',\'7-l\':\'<9 e="d-c">黄晓辉</9><b>\'+\'现就职于点融，一家上海的互联网金融公司，曾就职于摩根士丹利、微软等公司。目前\'+\'主要负责点融网站业务系统的设计和开发。专注于互联网金融业务架构设计、微服务实践\'+\'、38规范和技术团队建设。\',\'7-k\':\'<9 e = "d-c">「团队技术进阶之路 - 以a为切入点」</9><b>\'+\'问题背景：团队在技术上成长缓慢，需要更快更好的完成各项业务需求；\'+\' 解决方案：以a为理论和实践框架，发挥“鲶鱼效应”，促进团队学习，\'+\'并最终在新的层次上提供综合技术能力； 方案介绍：经历了 引入 - 讨论 \'+\'- 概念验证 - 小范围实践 - 全面推进 - 反思 - 重新设计 等多个阶段，\'+\'在各个阶段让团队自己去发现并总结经验教训，从而在实践中得到成长； \'+\'实施后的效果：团队在编码规范，代码架构，业务建模等方面形成了一套统\'+\'一的方法论，并且进一步引入了37的实践，在开发质量和效率上都得到了提供。\',\'7-i\':\'<f>\'+\'<1>实施a前所在团队遇到的问题&背景</1>\'+\'<1>具体的实施步骤</1>\'+\'<1>从领域模型的讨论开始</1>\'+\'<1>36 & 遇到的问题</1>\'+\'<1>在团队中扩大实践范围 & 遇到的问题</1>\'+\'<1>反思</1>\'+\'<1>重新设计</1>\'+\'<1>总结</1>\'+\'</f>\'},{\'7-n\':\'../m/h/35.r\',\'7-o\':\'周雪峰\',\'7-j\':\'衡睿教育1b，微软最有价值专家（1t）\',\'7-l\':\'<9 e="d-c">周雪峰</9><b>\'+\'衡睿教育1b，微软最有价值专家（1t）<b>\'+\'瑞通（北京）高级技术培训中心高级讲师，微软最有影响力开发者，微软32 31，\'+\'具有多年基于.30平台的互联网项目的架构经验及团队管理经验,十多年来一直从事\'+\'R企业的管理，咨询和培训工作；具有丰富的R企业管理经验，咨询和教学经验。\',\'7-k\':\'<9 e = "d-c">「领域驱动设计与x项目管理」</9><b>\'+\'问题背景：领域驱动设计架构和x敏捷项目管理方法论相结合，改进组织治理。\'+\' 解决方案选型：三个医疗行业项目（江西省医院信息化管理系统，江西省新农合信\'+\'息管理系统，江西省临床试验信息管理系统），技术架构为微软的a框架（2Y\'+\'2X），项目管理方法论为：x 方案介绍：使用x敏捷项目管理方法论，\'+\'管理基于a的项目，结合x的a框架各自的优势，提升开发效率，实现软件工\'+\'厂化的组织改进。 实施后效果：提高开发效率，改进软件开发流程与绩效考核，实\'+\'现了组织的技术资产原始积累，与组件化开发。\',\'7-i\':\'<f>\'+\'<1>x和a的完美结合</1>\'+\'<1>三方（产品经理，项目经理和程序员）领域模型设计会</1>\'+\'<1>启动x流程（计划会议，进行x，演示）</1>\'+\'<1>用a实现的软件工厂</1>\'+\'<1>a案例分享：江西省新农合信息管理系统</1>\'+\'</f>\'},{\'7-n\':\'../m/h/2V.r\',\'7-o\':\'张建锋\',\'7-j\':\'资深a实践者\',\'7-l\':\'<9 e="d-c">张建锋</9><b>\'+\'千岛源/共同创始人<b>\'+\'原红帽公司 2U 应用服务器核心开发组成员。毕业于北京邮电大学和\'+\'清华大学，曾供职于金山软件，2T 科技公司和红帽软件。 对于 N \'+\'的各项规范比较熟悉；开源技术爱好者，喜欢接触各类开源项目，学习优秀\'+\'之处并加以借鉴，认为阅读好的源码就和阅读一本好书一样让人感到愉悦；\'+\'在分布式计算，企业应用设计，移动行业应用，2S 等技术领域有丰富的\'+\'实战经验和自己的见解；愿意思考软件背后蕴涵的管理思想，认为软件技术\'+\'是一种高效管理的实现方式，有志于将管理学和软件开发进行结合。\',\'7-k\':\'<9 e = "d-c">「微服务架构下B在领域驱动设计中的精妙应用」</9><b>\'+\'B规范是N中揭示软件对象设计的部分，最早来源于1a的1c框架。在a设计中，\'+\'可以运用大量的B规范定义技术来灵活的对应用软件设计构造。和F框架相比，B可塑造\'+\'性更强，企业可以自行开发定义出一套符合自身业务特点的业务框架，做到软件复用和易维护。\'+\'通过配合使用2R，消息，2Q，流式数据，事务处理等技术，B可以实现一套高效稳定的a \'+\'I开发框架。更重要的是，它是可扩展可伸缩的，既能部署成经典的2P包应用；又可以结合\'+\'2O，开发微服务体系的应用。\',\'7-i\':\'\'+\'<f>\'+\'<1>a用I语言的实现设计思路</1>\'+\'<1>应用B规范定义对象 </1>\'+\'<1>a开发框架的实现介绍</1>\'+\'<1>如何实现灵活部署</1>\'+\'</f>\'},{\'7-n\':\'../m/h/2N.D\',\'7-o\':\'亢江妹\',\'7-j\':\'s首席业务分析师，中国区业务分析实践负责人\',\'7-l\':\'<9 e="d-c">亢江妹</9><b>\'+\'s首席业务分析师，中国区业务分析实践负责人<b>\'+\'在敏捷/精益产品需求分析、大企业需求管理、行业研究等方面，有丰富的实战和教练经验；\'+\'她也是业务分析师(2M)、产品经理的活跃参与者，是2L(2K Z 2J)社区、\'+\'s中国行业研究社区的发起人，也是s商业洞见的主编。\',\'7-k\':\'<9 e = "d-c">「a落地：y和架构师的完美结对」</9><b>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让a的真正价值落地，即如何\'+\'“让业务领域驱动架构设计”。本话题中，将结合项目实例与你分享y和架构师如何完美结对，\'+\'来梳理业务需求、进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型\'+\'，梳理和定义业务服务需求，在“业务侧”和“技术侧”建立统一共同的语言，真正让a落地，\'+\'并提供y和架构师结对实践的实用技巧。\',\'7-i\':\'<f>\'+\'<1>4种常用的业务梳理模式，快速建立业务背景上下文</1>\'+\'<1>业务领域、划分子领域的划分模式及案例 </1>\'+\'<1>如何建立业务概念关系模型</1>\'+\'<1>梳理定义服务需求</1>\'+\'<1>业务概念模型与信息架构、技术架构如何相互映射？</1>\'+\'<1>y和架构师完美结对的S</1>\'+\'</f>\'},{\'7-n\':\'../m/h/2I.D\',\'7-o\':\'周宇刚\',\'7-j\':\'s高级咨询师，a实践家\',\'7-l\':\'<9 e="d-c">周宇刚</9><b>\'+\'s高级咨询师，a实践家<b>\'+\'10年企业级应用开发经验，主要负责软件交付和持续交付咨询。从2H年开始关注领域驱动设计，\'+\'是2G 2F a标签 2E 2D 1v 2B 之一，曾在多个行业领域中实战过a。\',\'7-k\':\'<9 e = "d-c">「a落地：y和架构师的完美结对」</9><b>\'+\'如果领域驱动设计，仅限于技术架构讨论的范畴，显然无法让a的真正价值落地，即如何“让业务\'+\'领域驱动架构设计”。本话题中，将结合项目实例与你分享y和架构师如何完美结对，来梳理业务需求、\'+\'进行产品规划，识别和划分业务领域、子领域、领域边界，建立概念关系模型，梳理和定义业务服务需求，\'+\'在“业务侧”和“技术侧”建立统一共同的语言，真正让a落地，并提供y和架构师结对实践的实用技巧。\'+\'B规范是N中揭示软件对象设计的部分，最早来源于1a的1c框架。在a设计中，\',\'7-i\':\'<f>\'+\'<1>4种常用的业务梳理模式，快速建立业务背景上下文</1>\'+\'<1>业务领域、划分子领域的划分模式及案例 </1>\'+\'<1>如何建立业务概念关系模型</1>\'+\'<1>梳理定义服务需求</1>\'+\'<1>业务概念模型与信息架构、技术架构如何相互映射？</1>\'+\'<1>y和架构师完美结对的S</1>\'+\'</f>\'},{\'7-n\':\'../m/h/2t.r\',\'7-o\':\'张晓龙\',\'7-j\':\'中兴通讯虚拟化架构师\',\'7-l\':\'<9 e="d-c">张晓龙</9><b>\'+\'中兴通讯虚拟化架构师<b>\'+\'U年毕业于哈尔滨工程大学计算机应用专业，爱好编程，业余时间喜欢写一些技术类文章。\'+\'U年就职于2r，参与过大型通信软件的开发，擅长2q和重构等2p实践。近年来参与虚拟化\'+\'产品的研发，同时负责提升全员的a能力，从a导入到a训练营，不断的给学员传递a的\'+\'思想和实践技能，目前a已在多个团队有效落地，并得到大家的一致认可。除过程序员，个人\'+\'在组织中还有一些其它标签，比如架构师、咨询师和技术教练等。个人的简书地址：\'+\'1d://1e.1f.Q/u/2n。熟练掌握C++/z/Y/I等编程语言，\'+\'这一年主要使用的编程语言是z，同时z也成了a落地的主要语言。这一年在简书上也写\'+\'了多篇与a相关的技术文章，比如《软件设计的演变过程》，《z事务模型》，\'+\'《a分层架构的三种模式》，《2l 1r 14 X z》，\'+\'《2k X Y 2h v Z M》。\',\'7-k\':\'<9 e = "d-c">「a分层架构的三种模式」</9><b>\'+\'问题背景：在这个快速应对需求变化的时代，代码容易被实现成意大利面条式，同时重复代码多，又好像有一些不同，\'+\'很多程序员都掉进了这个让人痛苦不堪的焦油坑，无法自拔。软件设计就是在长期以来让软件容易应对变化，\'+\'提高可修改性和可维护性，从而降低软件开发成本。方案介绍：通过分层设计，分离关注点，凸显领域模型，\'+\'降低层与层之间的依赖，同时有利于各层逻辑的复用或替换。《领域驱动设计－软件核心复杂性应对之道》这本书中，\'+\'提出了传统的四层架构，层与层之间遵循松散分层架构，即上层可以调用任意下层。我们在实践中，\'+\'将基础设施层分为横向的和纵向的，横向的11提供给领域层调用，纵向的11提供给应用层和用户界面层调用，\'+\'其中领域层、应用层和用户界面层遵循严格分层架构，即上层仅能调用相邻的下层，这就是“L”型分层架构。\'+\'将18应用在分层架构中，将出现五层架构模式，相对于传统的四层架构模式，基础设施层、应用层和用户界面层保持不变，\'+\'将领域层分离成新领域层（14/2c）和环境层（q）。在一些复杂的领域，一次事务涉及很多次消息的交互，\'+\'这时q层就非常复杂，很有必要把q层分离成新q层（H和16）和事务层\'+\'（2b 1g)。新q层基本单位是一次同步消息或异步消息的交互（记作H），\'+\'新q层的16是H或一组紧密相关的H（记作28）是否执行的开关，\'+\'而事务层可以看做是大q层。在实践中，我们抽取出z事务模型，基本版参见简书的文章《z事务模型》，\'+\'地址1d://1e.1f.Q/p/21，一直在演进，目前已被多个团队使用。\'+\'a六层架构模式可以看做是a五层架构模式在特定领域的一种变体。通过依赖导致原则，改善分层架构，即六边形架构。\'+\'六边形架构在产品级有一些应用，比如平台聚合内部的各种能力，对外统一提供为1Z接口。\'+\'六边形架构也可以用于不同层组件的协作开发，即在明确组件功能后就可以专注开发，待到联调阶段，\'+\'该组件的多个用户分别通过端口适配器方式再与该组件进行集成。实施后效果说明：事务层代码和流程图一一对应，\'+\'领域层代码通过小类大对象设计，代码层次清晰，有效的控制了软件的实现复杂度，并且得到了团队所有成员的普遍认可。\',\'7-i\':\'<f>\'+\'<1>a回顾</1>\'+\'<1>分层架构简介 </1>\'+\'<1>传统的四层架构模式</1>\'+\'<1>引入18后的五层架构模式，特定领域的六层架构模式</1>\'+\'<1>六边形架构</1>\'+\'<1>收益</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1X.A\',\'7-o\':\'张晔\',\'7-j\':\'中兴通讯公司级研发教练，架构技术狂热爱好者。\',\'7-l\':\'<9 e="d-c">张晔</9><b>\'+\'中兴通讯公司级研发教练，架构技术狂热爱好者。<b>\'+\'擅长C++，1i，1j等编程语言，具备丰富的领域建模、代码质量提升、自动化测试、w等实战经验。\'+\'对深圳软件技术社区发展推广亦有贡献，组织多次社区活动（1V、1U、编码道场等）。目前对形式化方法1T+\'+\'和微服务架构具有浓厚兴趣。<b>\'+\'工作之余喜欢读书、音乐、羽毛球、旅游以及研究新事物。\',\'7-k\':\'<9 e = "d-c">「a驱动测试体系建设」</9><b>\'+\'本次演讲将全方位介绍a方法在中兴通讯测试体系设计和落地过程中所启到的关键性作用。\'+\'内容既涵盖从传统自动化测试到基于领域驱动测试的思想转变，也包含随着a实践的不断深入对自动化测试框架逐步演进，\'+\'再到运用a战略设计对云测试平台的微服务划分。不但包含a战略设计，也包括a的战术设计；不但包含a在单体架\'+\'构的应用，还包括a在微服务架构的应用；不但包含a在测试执行框架的实践，还包括a在云测试平台的实践；不但包\'+\'含a的1i语言的实现，还包括1j语言的实现。<b>\'+\'整个测试体系目前在中兴通讯w中发挥着重要作用，本次演讲还会对测试体系建设的不同阶段所面临的不同问题和相\'+\'应解决方案进行描述，相信能满足不同类型的听众。\',\'7-i\':\'<f>\'+\'<1>中兴通讯w实践简介</1>\'+\'<1>传统的自动化测试介绍</1>\'+\'<1>基于领域驱动的自动化测试</1>\'+\'<1>基于云的测试平台建设</1>\'+\'<1>a实践心得总结</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1Q.A\',\'7-o\':\'黄亮\',\'7-j\':\'s资深咨询师，a实践布道者\',\'7-l\':\'<9 e="d-c">黄亮</9><b>s资深咨询师，a实践布道者，十三年应用开发与架构经验，热爱技术，喜欢1N。专注于软件架构与持续交付领域，为不同领域的客户提供专业的技术改进与咨询服务，尤其擅长于1M技术栈与微服务架构。\',\'7-k\':\'<9 e = "d-c">「从v到a」</9><b>\'+\'有人说a是v的一个正确的作法，当我们实践a的过程中，很多v问题依然会遇到，在本主题中，我们将带您探索v本质，分析并解决a实践遇到的各种v问题。\',\'7-i\':\'<f>\'+\'<1>v本质</1>\'+\'<1>从v到a</1>\'+\'<1>实践a中遇到的一些v问题</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1K.D\',\'7-o\':\'胡戎\',\'7-j\':\'中国电子第六研究所前端负责人，1n讲师，1o.1p维护者\',\'7-l\':\'<9 e="d-c">胡戎</9><b>中国电子第六研究所前端负责人，1n讲师，1o.1p维护者，负责多个大型航天项目\',\'7-k\':\'<9 e = "d-c">「领域驱动的E复合范式在复杂前端应用的实践」</9><b>\'+\'多数据源复杂应用中如何管理数据流，结合K和E的的复合范式构建大型的复杂应用程序。1G 1q 1F采用1q基于K管理1D\'+\'以及1r 1B，根据E的编程思想通过1A设计并管理单向数据流。\',\'7-i\':\'<f>\'+\'<1>介绍K和E</1>\'+\'<1>介绍K和E在大型前端应用的技术选型</1>\'+\'<1>举例介绍1x管理数据流常见的业务场景</1>\'+\'</f>\'},{\'7-n\':\'../m/h/2C.r\',\'7-o\':\'王洋\',\'7-j\':\'猫眼娱乐/商品电商技术负责人<b>美团点评《领域驱动设计》课程主讲人\',\'7-l\':\'<9 e="d-c">王洋</9><b>猫眼娱乐商品电商技术负责人，同时也是美团点评《领域驱动设计》课程的主讲；\'+\'加入猫眼娱乐（原美团电影事业部）之前，曾就职于支付宝、创新工场，参与支付宝钱包、花呗、网商银行等产品的研发；\'+\'硕士毕业于西安交通大学，专注于新型编程模型的研究\',\'7-k\':\'<9 e = "d-c">「领域驱动与1u电商的养成记」</9><b>\'+\'问题背景：随着互联网技术不断深入到电影行业的各个环节，猫眼需要搭建一套围绕影院的1u电商体系，引导用户在线上购买影院的各种服务，线下去消费服务<b><b>\'+\'解决方案选型：顶层架构使用领域驱动的思想建模，包括限界上下文、聚合根等技术，局部根据场景需要，也会使用一些常用的设计模式<b><b>\'+\'方案介绍：战略层面包括供应链、交易、消费、资金等限界上下文，框架层面使用父子工程构建了可水平扩展的分层框架，战术层面则使用聚合根、实体、值对象、1w等手段分解代码的复杂性，同时根据业务特点抽象出商品渠道、订单引擎、资金流等模型<b><b>\'+\'实施后效果说明：目前整套电商体系的扩展性较好，以较低的成本陆续支持了卖品、衍生品、电影票、演出等多类型的交易场景，也支持验券、物流、投币等消费场景；同时在1y过亿的情况下保持了较高的性能和稳定性<b>\',\'7-i\':\'<f>\'+\'<1>领域术语的管理和维护</1>\'+\'<1>分层框架的设计和实践</1>\'+\'<1>限界上下文的提取和维护</1>\'+\'<1>系统之间的组织方式</1>\'+\'<1>业务演进带来的矛盾点</1>\'+\'<1>潜在模型的抽象和分析</1>\'+\'<1>遇到的困难和总结</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1z.r\',\'7-o\':\'刘学斌\',\'7-j\':\'畅捷通信息技术有限公司云产品研发部专家、架构师\',\'7-l\':\'<9 e="d-c">刘学斌</9><b>畅捷通信息技术有限公司专家、架构师，近20年软件开发经验，擅长领域驱动设计建模、\'+\'微服务架构设计、应用安全开发、持续集成、w、业务分析建模、开发流程设计等领域。有大型企业组织（1C+人团队）实施持续集成、\'+\'应用安全开发、w、架构设计实践经验。目前任职用友畅捷通云产品研发部，专职企业云产品微服务架构设计、企业云产品建模\'+\'（领域建模、物理建模、流程建模），坚信并实践建模解决复杂业务问题之道。\',\'7-k\':\'<9 e = "d-c">「a在微服务架构企业云产品中的实践」</9><b>\'+\'公司早在8年前开发了一套面向小型企业供应链管理软件包产品，目前每年销量近1E套，在国内同类市场中有相当高的市场占有率。近几年来，\'+\'互联网技术的发展和普及，以及公有云方式的社会化商业基础设施的完善，市场也逐步开始接受企业应用公有云服务。作为老牌的企业应用产品\'+\'开发商，面对互联网浪潮的机遇和挑战，公司决定采用最新的互联网技术和方法开发一套面向小型企业用户的云应用产品。小型企业的特点是数\'+\'量多、个体差异大、单个企业业务交易量相对不高，为了能快速应对变化（业务变化、市场变化等），我们采用微服务架构进行架构设计、引入\'+\'w作为基础支撑、采用a进行分析以及架构设计（a战略设计）、用统一过程（1H）及P 2.0进行建模（业务建模、系统建模、领域\'+\'建模、物理建模），整体提高软件内在质量。目前产品已经基本定型，预计年底全国上市，整个产品研发从流程、方法、微服务架构、平台等方\'+\'面一次完整的成功实践，我们对此充满信心。\',\'7-i\':\'<f>\'+\'<1>前言</1>\'+\'<1>背景</1>\'+\'<1>问题分析</1>\'+\'<1>设计目标和思路</1>\'+\'<1>研发实践</1>\'+\'<1>组织架构</1>\'+\'<1>开发规范</1>\'+\'<1>开发流程</1>\'+\'<1>分析设计方法</1>\'+\'<1>架构方案</1>\'+\'<1>租户模式</1>\'+\'<1>应用架构</1>\'+\'<1>总体技术架构</1>\'+\'<1>模块技术架构</1>\'+\'<1>一致性方案</1>\'+\'<1>总结</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1L.r\',\'7-o\':\'丁辉\',\'7-j\':\'中兴通讯公司级敏捷教练和代码大全、代码设计训练营教练\',\'7-l\':\'<9 e="d-c">丁辉</9><b>中兴通讯公司级敏捷教练和代码大全、代码设计训练营教练，13年软件开发经验，8年项目\'+\'管理和流程改进经验，指导并参多个团队由传统研发模式向敏捷研发模式转型（其中超过1R人的大型团队成功项目级敏捷转型5个）。 在敏\'+\'捷导入、指导团队转型、1Y、核心技术实践、自组织团队建设等方面具有丰富的实战经验； 对如何提升员工代码设计能力和提升代码内在质量\'+\'、遗留代码重构、a/1g架构设计等方面也有较多理解和解决思路； 精益创业教练，曾指导多个创业团队产品设计、团队运作、技术架构。\',\'7-k\':\'<9 e = "d-c">「康威定律中的a-a架构与团队组织调整」</9><b>\'+\'a实现了业务逻辑、系统逻辑、部署逻辑的分层和解耦，但是如果组织架构没有跟随这种结构，往往导致领域划分和人员的组织形式不匹配，\'+\'导致领域和人员的一种映射，而来带来额外的沟通成本和组织壁垒，这种情况久而久之又反过来对领域的合理划分造成逐步的侵蚀，渐渐的领域\'+\'对象又开始耦合起来，原理清晰的分层又开始腐化了。在我们最初实践a的时候，有些团队规模庞大，采用a之后，团队职责还是按组件方式\'+\'划分，就出现过这种对a架构腐化的情况，人员拆分始终面临难题：人员纵拆又要兼顾解决公共层维护问题。我知道的团队，先后经历过绝对纵\'+\'拆、基于功能的复用的纵拆辅助少量的横拆，最后随着a的深入，把领域层进行基于语义的拆分，人员也基于领域的纵拆+基于领域本身分层的\'+\'语义复用的横拆，目前看比较顺畅的解决了a架构和组织治理的问题。\',\'7-i\':\'<f>\'+\'<1>a对领域的划分</1>\'+\'<1>开发团队人员纵拆带来的好处和挑战</1>\'+\'<1>领域层基于语义的再次分层</1>\'+\'<1>开发团队人员按领域纵拆+按领域层基础语义层横拆结合</1>\'+\'<1>现场交流</1>\'+\'</f>\'},{\'7-n\':\'../m/h/23.D\',\'7-o\':\'付银海\',\'7-j\':\'泰然城G\',\'7-l\':\'<9 e="d-c">付银海</9><b>17年软件研发从业经历，现任泰然城G，曾在美国工作多年，历任元宝铺G负责技术团\'+\'队管理，主持公司技术研发、体系和品质管控等工作；全球最大的企业级软件公司25（甲骨文）上海研发中心首席工程师；12 26中国\'+\'研发中心研发总监；阿里巴巴27平台技术部架构师；29.Q研发中心技术经理。\',\'7-k\':\'<9 e = "d-c">「领域驱动设计－创业公司治理」</9><b>\'+\'真实的实践案例<b>\'+\'创业公司的坑<b>\'+\'如何引入领域设计支付结算方式<b>\',\'7-i\':\'<f>\'+\'<1>团队基因：<b>\'+\'<g><1>技术驱动J业务驱动</1><1>理想J现实</1></g></1>\'+\'<1>成长现实：<b>\'+\'<g><1>小－》大</1><1>简单－》复杂</1><1>牛人－》团队</1><1>技术追赶业务</1></g></1>\'+\'<1>面临问题：<b>\'+\'<g><1>业务无法堆叠</1><1>系统边界混乱</1><1>信息传递失真</1><1>团队边界模糊</1><1>跨组协作困难</1></g></1>\'+\'<1>解决方案：<b>\'+\'<g><1>继续野蛮生长</1><1>请到大牛G</1><1>渐进优化改良</1><1>极端推倒重来</1></g></1>\'+\'<1>问题本质：<b>\'+\'<g><1>没有领域</1><1>领域脆弱－抽象不够</1><1>实施困难－抽象过度</1><1>没有取舍－断舍离－杀伐决断</1></g></1>\'+\'<1>实践分享：<b>示例：1s+1m+F+1k的领域驱动架构\'+\'<g>\'+\'<1>2a～2d  12 2f：（2g）架构图＋岗位设定－－－－－－－－－－－－－－－过度抽象</1>\'+\'<1>2i～V 元宝铺：（2j）专家设计领域＋2m落地实现＋技术团队宣讲－－－－－－技术等待</1>\'+\'<1>V～T 旺资金融：（2s）旺资设计图－－－－－－－－－－－－－－－－－－－－精简实现</1>\'+\'<1>T～未来10年 领域划分－团队划分－成本压力－工期压力－跨部门沟通－服务化治理－－改良＋推倒</1>\'+\'</g></1>\'+\'<1>经验总结：<b>\'+\'<g><1>升纬思考J降纬执行</1><1>的度如何把握</1><1>技能要求</1><1>边界划定J担当冲锋</1><1>技术人员能力成长：执行力，推动力，领导力，哲学力</1></g></1>\'+\'</f>\'},{\'7-n\':\'../m/h/2v.r\',\'7-o\':\'范钢\',\'7-j\':\'航天信息股份有限公司首席架构师<b>《大话重构》作者，软件架构及重构客座讲师\',\'7-l\':\'<9 e="d-c">范钢</9><b>航天信息首席架构师，《大话重构》作者，哈工大软件工程硕士，软件架构及重构的客座讲师。\'+\'大型遗留系统改造专业户，多次参与大型遗留系统改造、软件系统重构等重大项目。长期关注大型业务系统品质保证、防止腐化以及技术改造等问\'+\'题，在实践互联网转型及大数据转型方面有丰富的经验。\',\'7-k\':\'<9 e = "d-c">「领域驱动：看我如何拥抱需求变更」</9><b>\'+\'客户对软件的需求总是在变，但软件企业在实现变更的过程中常常带来软件的腐化。许多系统在经过多年的维护、无数次的需求变更后，\'+\'软件设计慢慢开始迷失方向。解决需求变更与软件腐化最有效的方案无疑是领域驱动设计。本演讲通过真实的案例，一个电商网站支付功\'+\'能的变更过程，演示软件腐化的过程，分析软件腐化的根源，采用领域驱动设计是怎样应对需求变更的、怎样避免软件腐化的，进而探讨\'+\'怎样的软件架构可以支持领域驱动设计，以及支持架构的演进，去面对互联网的高并发访问，大数据的架构转型。\',\'7-i\':\'<f>\'+\'<1>软件开发的痛点：<b>\'+\'<g><1>需求不断在变更</1><1>需求变更引发软件退化</1><1>需求变更 + 软件退化 = 软件设计迷失方向</1></g></1>\'+\'<1>问题的分析：<b>\'+\'<g><1>软件是对真实世界的模拟，但真实世界十分复杂</1><1>人在认识真实世界的时候总是有一个从简单到复杂的过程</1><1>因此软件需求变更成为一种必然，并且总是由简单向复杂转变</1><1>但在软件由简单向复杂转变过程中，设计容易迷失方向</1></g></1>\'+\'<1>解决方案：<b>\'+\'<g><1>将软件设计与真实世界对应起来，建立领域模型</1><1>用领域模型指导软件开发</1><1>每次变更的时候，重新回到领域模型进行变更</1><1>用领域模型变更指导软件变更</1></g></1>\'+\'<1>案例：电商网站支付功能的变更过程\'+\'<g><1>第一个版本的简单支付功能</1><1>商品折扣的变更及其设计</1><1>支付方式的变更及其设计</1><1>秒杀、预订、闪购、众筹等功能的变更（涉及缓存、异步化、分布式等架构调整）</1><1>软件设计开始迷失方向</1></g></1>\'+\'<1>采用领域驱动的设计变更过程：\'+\'<g><1>第一个版本的简单支付功能（建立领域模型）</1><1>商品折扣的变更及其设计（先在领域模型基础上变更）</1><1>支付方式的变更及其设计（领域驱动支持设计的变更）</1><1>秒杀、预订、闪购、众筹等功能的变更（如何应对演化式架构调整）</1></g></1>\'+\'<1>软件架构如何支持领域驱动设计：<b>示例：1s+1m+F+1k的领域驱动架构\'+\'<g><1>如何支持增删改业务</1><1>如何支持查询业务</1><1>如何支持架构的演进（单机→集群→读写分离→大数据）</1></g></1>\'+\'</f>\'},{\'7-n\':\'../m/h/2x.D\',\'7-o\':\'林炜翔\',\'7-j\':\'传统投行业老码农，M应用实践者，技术业务两手抓\',\'7-l\':\'<9 e="d-c">林炜翔</9><b>传统投行业老码农，M应用实践者，技术业务两手抓\',\'7-k\':\'<9 e = "d-c">「a 2y 2z 2A 2W」</9><b>\'+\'1l 2Z 33>无副作用流程规划>1l 分流数据>微服务扩展，业务，测试，数据等合理分离\',\'7-i\':\'使用M编程风格拆分业务流程的作用域，以便于微服务扩展，业务，测试，数据等合理分离\'},{\'7-n\':\'../m/h/34.r\',\'7-o\':\'金新明\',\'7-j\':\'汇丰集团首席风控架构师\',\'7-l\':\'<9 e="d-c">金新明</9><b>现任职汇丰集团首席风控架构师，有20多年的国际性跨行\'+\'业大型系统开发和设计经验，是软件建模集成和架构设计方面的专家。他曾引入基于模型的架构开发并且实现金\'+\'融行业第一个从前端到后台的基于模型代码生成系统。<b>\'+\'金新明博士参与了多个3j强企业的超大型复杂系统设计和企业架构设计，曾任职于多家国际大型银行，对各个\'+\'层面的架构设计都有深入的了解和实际经验。他有智能控制（华南理工大学）和先进软件工程（曼彻斯特大学）博士学位。\',\'7-k\':\'<9 e = "d-c">「基于模型的架构设计」</9><b>\'+\'a是基于模型的架构设计的一种方法，将其放在这个大背景下讨论它的演变过程并结合自己十多年来在基于模型的软件\'+\'开发方面的经验。在当前微服务和云计算的技术趋势下，如何认识领域驱动设计的必要性和发展方向。\',\'7-i\':\'<f>\'+\'<1>领域驱动设计 2w. 基于模型的架构设计</1>\'+\'<1>a 和基于模型的软件开发</1>\'+\'<1>a和w, 1P</1>\'+\'</f>\'},{\'7-n\':\'../m/h/1O.r\',\'7-o\':\'王立\',\'7-j\':\'厦门云雾科技有限公司创始人/总经理\',\'7-l\':\'<9 e="d-c">王立</9><b>前阿里资深工程师，国内最早一批实践和推广a的践行者，\'+\'建立了一套适用于a的敏捷开发过程，长期聚焦于领域分析、彩色P建模，擅长复杂业务的模型提炼与架构设计，\'+\'主张在聚合的实现在可以采用微单体时就尽量不要采用微服务，现任厦门云雾科技有限公司创始人/总经理。\',\'7-k\':\'<9 e = "d-c">「“事项跟踪”项目的a实现」</9><b>\'+\'事项跟踪管理是一个公司内部应用，解决各个部门主管对下属工作的安排与跟踪问题，项目采用a开发，\'+\'每个事项以及内部任务状态的流转“自治”，并根据状态与操作者角色提供操作入口，项目极其短小精悍，\'+\'深入浅出，可以简明扼要地把a实践中的采用的基本思想、套路、实践模式解释清楚，经验具有普遍性和\'+\'可复制性，非常适用于初步接触a的开发团队学习。\',\'7-i\':\'<f>\'+\'<1>项目背景</1>\'+\'<1>业务分析</1>\'+\'<1>架构设计</1>\'+\'<1>领域实现</1>\'+\'<1>状态管理</1>\'+\'<1>持久层与缓存</1>\'+\'<1>读写分离</1>\'+\'<1>性能优化</1>\'+\'<1>总结</1>\'+\'</f>\'}]',62,214,'|li||||||speaker||span|DDD|br|text|bold|class|ul|ol|speakers|outline|introduction|topic|information|resource|img|name||Context|jpg|ThoughtWorks|Bounded||OO|DevOps|Scrum|BA|Golang|png|CDI||jpeg|FRP|Spring|CTO|Action|Java|VS|OOP||FP|JavaEE|UMLChina|UML|com|IT|Tips|2017|2008|2016|Event|in|Python|and||API|C3||Object||Specification||DCI|Brandolini|GavinKing|CEO|Seam|http|www|jianshu|DSL|Alberto|python|golang|MyBatis|actor|SpringMVC|CNode|graphql|cn|redux|Domain|EasyUI|MVP|O2O|Top|CQRS|RXJS|pv|liuxuebin|RxJS|Modal|700|uiModal|3W|rxjs|react|UP|alberto|brandolini|hurong|dinghui|JAVA|Coding|wangli|MicroSevice|huangliang|100|Storming|TLA|GDCR|APAC|why|zhangye|CI|Restful||b7e874f6d3e8|ddd|fuhaiyin|matters|ORACLE|ENERGY|B2B|Procedure|Perficient|2010|Transaction|Role|2012|today|Energy|60TECH|from|2015|70TECH|FizzBuzzWhizz|Implement|DBA|1381dc29fed9|xiaoran|XP|TDD|ZTE|10TECH|zhangxiaolong|zhangyi|fangang|Vs|linweixiang|with|functional|programming|Answerer|wangyang|Time|All|Overflow|Stack|09|zhouyugang|Analysis|Design|DnA|IIBA|kangjiangmei|kubernetes|war|JPA|Rest|Devops|IONA|JBoss|zhangjianfeng|paradiagm|ayered|AutoNL|based|NET|Idol|CPE|microservice|jinxinming|zhouxuefeng|POC|BDD|REST|huangxiaohui|repository|vs|ERP|Sourcing|zhangqunhui|SOA|IBM|kouyu|Linux|500|panjiayu|tengyun|tequila|Scala|lixin|260|2002|var'.split('|'),0,{}))
